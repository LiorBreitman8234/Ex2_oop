@startuml

Ex2 o-- GUI
GUI o-- GraphAlgorithms
GUI o-- myBoxLayout
GUI o-- showGraph
GraphAlgorithms o-- Graph
GraphAlgorithms o-- nodeToJson
GraphAlgorithms o-- edgeToJson
GraphAlgorithms o-- minHeap
minHeap o-- pair
Graph o-- Edge
Graph o-- Node
Node o-- Location

class Ex2{
+getGrapg(String json_file)
+getGrapgAlgo(String json_file)
+runGUI(String json_file)
}

class GUI{
+activateGUI(String path)
+createMainWindow(String path)
}

class GraphAlgorithms {
-Graph graph
+init(DirectedWeightedGraph g)
+getGraph()
+copy()
+isConnected()
+shortestPathDist(int src, int dest)
+shortestPath(int src, int dest)
+center()
+tsp(List<NodeData> cities)
+save(String file)
+load(String file)
+Dijkstra(int sourceNode)
+bfs(int nodeKey,Graph graph)
+createOppositeGraph()
}

class myBoxLayout {
-GraphAlgorithms GA = new GraphAlgorithms
-List<NodeData> cities = new ArrayList<>
+createMainWindow(Container pane, String path)
+CreateAlgoWindow()
+CreateFileWindow()
+CreateGraphWindow()
+actionPerformed(ActionEvent e)
+openSrc()
+openDest()
+openNode()
+openNode1()
+openNode2()
+openW()
+openLocX()
+openLocY()
+getEdgesOfPath(List<NodeData> path)

}

class showGraph {
-static GraphAlgorithms GA = new GraphAlgorithms
-List<GeoLocation> scores
- int padding = 20
- int labelPadding = 12
- static int pointWidth = 7
- Color pointColor = new Color
- Color lineColor = new Color
- Color indexColor = new Color
- ArrayList<EdgeData> paintEdges = new ArrayList<>
- NodeData center
- HashMap<Integer,GeoLocation> locations = new HashMap<>()
- HashMap<Integer,Point> points = new HashMap<>()
+showGraph(List<GeoLocation> scores,ArrayList<EdgeData> edgesToPaint, NodeData center)
+paintComponent(Graphics g)
+createAndShowGui(DirectedWeightedGraph g, ArrayList<EdgeData> toPaint, NodeData center)
+drawArrowLine(Graphics g, int x1, int y1, int x2, int y2, int d, int h)
}

class Graph {
-HashMap<Integer,NodeData> nodes
-HashMap<Integer,HashMap<String,EdgeData>> nodeEdges
-ArrayList<EdgeData> allEdges
-final String name
-int MC =0
+Graph()
+Graph(ArrayList<Edge> edges, ArrayList<Node> nodes,String name)
+Graph(Graph other)
+getter()
+addNode(NodeData n)
+connect(int src, int dest, double w)
+nodeIter()
+edgeIter()
+edgeIter(int node_id)
+removeNode(int key)
+removeEdge(int src, int dest)
+nodeSize()
+edgeSize()
}

class nodeToJson {
- String pos
- int id
+nodeToJson(NodeData node)
+getters()
+setters()
+toString()
}

class edgeToJson {
- int src
- double w
- int dest
+edgeToJson(EdgeData edge)
+getters()
+w()
+setters()
+toString()
}

class minHeap {
 - int capacity
 - int currentSize
 - pair[] mH
 - int[] indexes
+minHeap(int capacity)
+display()
+insert(pair x)
+bubbleUp(int pos)
+extractMin()
+sinkDown(int k)
+swap(int a, int b)
+isEmpty()
+heapSize()
}

class pair {
-int node
-double dist
+pair(int n, double dist)
+pair()
+getters()
+setters()
+compareTo(pair other)
+equals(Object o)
}

class Node {
-int key
-GeoLocation loc
-String info
-ArrayList<Integer> EdgesToNode
-ArrayList<Integer> EdgesFromNode
-int tag
+Node(int key, GeoLocation location)
+Node(int key,double x, double y, double z)
+Node(LinkedTreeMap<?,?> node)
+Node(Node other)
+Node(int key, GeoLocation pos, String happy)
+getters()
+addEdge(Edge edge)
+removeEdge(int node,String type)
+setters()
}

class Edge {
-int src
-int dest
-double w
-String info
+Edge(int src, int dest, double weight)
+Edge(LinkedTreeMap<?,?> edge)
+Edge(Edge other)
+getters()
+setters()
+compareTo(Edge o)
}

class Location {
-double x;
-double y;
- double z;
+Location(double x, double y, double z)
+x()
+y()
+z()
+distance(GeoLocation g)
+toString()
}

@enduml